version: '3.8'
services:
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: checkpoint2
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    volumes:
      - ./PostgreSql-Snippets/infile:/infile
      - ./pg_data:/var/lib/postgresql/data/
    networks:
      - proxy_public

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - 22181:2181
    networks:
      - proxy_public
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    networks:
      - proxy_public
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1    
  
  redis:
    image: redis:latest
    command: redis-server --requirepass checkpoint2
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    networks:
      - proxy_public

networks:
  proxy_public:
    driver: bridge